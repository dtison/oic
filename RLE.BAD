
/*  Word oriented run length encoder  */ 

EncodeRLE (lpDest, lpSource, wNumBytes, wCompressedBytes)
LPSTR lpDest;
WORD  FAR *lpSource;
WORD  wNumBytes;
WORD  *wCompressedBytes;
{


    WORD  CurrVal;
    WORD  NextVal;

    int   i;
    RLE   RLEPacket; 
    char  *PacketPtr;


    WORD  CurrRunCount;
    BOOL  bNeedNewPacket;
    WORD  wRLEByteCount;
    WORD  wNumVals;

    BOOL  bIsPending;
    BOOL  bIsGreater;
    WORD  wVals;

    wNumVals = wNumBytes >> 1;


    CurrVal         = *lpSource++;
    CurrRunCount    = 1;
    bNeedNewPacket  = FALSE; 
    wRLEByteCount   = 0;
    wVals           = 1; 


    while (wVals < wNumVals) 
    {

        NextVal = *lpSource++;
        wVals++;

        bIsPending = FALSE;
        bIsGreater = FALSE;

        if (NextVal == CurrVal)
        {
            CurrRunCount++;
            if (CurrRunCount == 255)
            {
                bNeedNewPacket = TRUE;
                bIsGreater = TRUE;
            }


        
        }
        else
            bNeedNewPacket = TRUE;


        if (bNeedNewPacket)
        {
            /*  Store old run packet  */

            RLEPacket.Count = CurrRunCount; 
            RLEPacket.Value = CurrVal;

            PacketPtr   = (char *) &RLEPacket;
 
            *lpDest++ = *PacketPtr++;
            *lpDest++ = *PacketPtr++;
            *lpDest++ = *PacketPtr;

                if (bIsGreater)
                {
                    CurrVal = *lpSource++;
                    wVals++;
                }
                else
                    CurrVal = NextVal;

                bIsPending = TRUE;

                CurrRunCount    = 1;
                bNeedNewPacket  = FALSE;


            wRLEByteCount   += 3;


        }
    }


    if (bIsPending)
    {
            /*  Store pending value in a run packet  */
            RLEPacket.Count = CurrRunCount; 
            RLEPacket.Value = CurrVal;

            PacketPtr   = (char *) &RLEPacket;
 
            *lpDest++ = *PacketPtr++;
            *lpDest++ = *PacketPtr++;
            *lpDest++ = *PacketPtr;
            wRLEByteCount   += 3;

            printf ("one more\n");
    }


          printf ("Pending: %d\n",bIsPending);

    *wCompressedBytes = wRLEByteCount;

}


